name: CI/CD for Firebase Hosting

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'
      - 'LICENSE'
      - '.vscode/**'
  pull_request:
    paths-ignore:
      - 'README.md'
      - 'LICENSE'
      - '.vscode/**'
  workflow_dispatch:

permissions:
  checks: write
  contents: read
  pull-requests: write

jobs:
  audit:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up Node.js
        uses: actions/setup-node@v6
        with:
          node-version-file: '.nvmrc'

      - name: Enable Corepack
        run: corepack enable

      - name: Cache Yarn dependencies
        uses: actions/cache@v4
        with:
          path: .yarn/cache
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --immutable

      - name: Yarn Audit
        run: yarn npm audit --all --recursive --severity high

  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up Node.js
        uses: actions/setup-node@v6
        with:
          node-version-file: '.nvmrc'

      - name: Enable Corepack
        run: corepack enable

      - name: Cache Yarn dependencies
        uses: actions/cache@v4
        with:
          path: .yarn/cache
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --immutable

      - name: Generate api client from OpenAPI spec
        run: yarn api:gen

      - name: Run linting checks
        run: yarn lint

  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up Node.js
        uses: actions/setup-node@v6
        with:
          node-version-file: '.nvmrc'

      - name: Enable Corepack
        run: corepack enable

      - name: Cache Yarn dependencies
        uses: actions/cache@v4
        with:
          path: .yarn/cache
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --immutable

      - name: Generate api client from OpenAPI spec
        run: yarn api:gen

      - name: Run tests
        run: yarn test

      - name: Knip (production check)
        run: yarn knip:ci

  deploy:
    runs-on: ubuntu-latest
    needs: [lint, test, audit]

    concurrency:
      group: 'deploy-${{ github.ref }}'
      cancel-in-progress: true

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up Node.js
        uses: actions/setup-node@v6
        with:
          node-version-file: '.nvmrc'

      - name: Enable Corepack
        run: corepack enable

      - name: Cache Yarn dependencies
        uses: actions/cache@v4
        with:
          path: .yarn/cache
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --immutable

      - name: Generate api client from OpenAPI spec
        run: yarn api:gen

      - name: Build
        run: yarn build

      - name: Deploy to Firebase (Production)
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_KNOBEL_MANAGER_WEBAPP }}
          channelId: live
          projectId: knobel-manager-webapp

      - name: Deploy Preview to Firebase (Pull Request)
        if: github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_KNOBEL_MANAGER_WEBAPP }}
          projectId: knobel-manager-webapp
